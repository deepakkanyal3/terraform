 data "aws_eks_cluster" "cluster" {
   name = var.eks_cluster
 }

 data "aws_caller_identity" "current" {}

 locals {
   oidc_url          = data.aws_eks_cluster.cluster.identity[0].oidc[0].issuer
   oidc_arn_data     = element(split("/", data.aws_eks_cluster.cluster.identity[0].oidc[0].issuer), length(split("/", data.aws_eks_cluster.cluster.identity[0].oidc[0].issuer)) - 1)
   oidc_provider_arn = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:oidc-provider/oidc.eks.${var.aws_region}.amazonaws.com/id/${local.oidc_arn_data}"
 }

data "tls_certificate" "this" {
  count = var.auto_thumbprint_enabled ? 1 : 0

  url = var.url
}

# resource "aws_iam_openid_connect_provider" "this" {
#   # count = var.create ? 1 : 0

#   url             = var.url
#   client_id_list  = var.audiences
#   thumbprint_list = setunion(
#     var.thumbprints,
#     (var.auto_thumbprint_enabled
#       ? data.tls_certificate.this[*].certificates[0].sha1_fingerprint
#       : []
#     )
#   )
#   # tags = var.tags
#   provider = aws.route53_provider
# }

data "aws_route53_zone" "route53" {
  name         = "${var.hosted_zone}."
  private_zone = false
  provider = aws.route53_provider

}

# External DNS IAM Policy 
resource "aws_iam_policy" "externaldns_iam_policy" {
  name        = "${var.eks_cluster}-external-dns-policy" 
  # path        = "/"
  description = "External DNS IAM Policy"
  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
              {
            "Effect": "Allow",
            "Action": [
                "route53:ChangeResourceRecordSets",
                "route53domains:*",
                "route53:*"
            ],
            "Resource": [
                "${data.aws_route53_zone.route53.arn}"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
                "route53:ListTagsForResource"
            ],
            "Resource": [
                "*"
            ]
        }
    ]
  })
  provider = aws.route53_provider
}

# IAM Role 
resource "aws_iam_role" "externaldns_iam_role" {
  name = "${var.eks_cluster}-external-dns-role" 

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
{
        Action = "sts:AssumeRoleWithWebIdentity",
        Effect = "Allow",
        # Sid    = "",
        Principal = {
          Federated = "${local.oidc_provider_arn}"
        }
        Condition = {
          StringEquals = {
            "${local.oidc_url}:sub": "system:serviceaccount:${var.namespace}:${var.service_account_name}"
          }
        }
      }
    ]
  })



  tags = {
    tag-key = "AllowExternalDNSUpdates"
  }
  provider = aws.route53_provider
}

# Associate External DNS IAM Policy to IAM Role
resource "aws_iam_role_policy_attachment" "externaldns_iam_role_policy_attach" {
  policy_arn = aws_iam_policy.externaldns_iam_policy.arn
  role       = aws_iam_role.externaldns_iam_role.name
  provider = aws.route53_provider
}

