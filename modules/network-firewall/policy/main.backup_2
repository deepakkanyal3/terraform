################################################################################
# Firewall Policy
################################################################################

resource "aws_networkfirewall_firewall_policy" "this" {
  count = var.create ? 1 : 0

  description = var.description

  dynamic "encryption_configuration" {
    for_each = length(var.encryption_configuration) > 0 ? [var.encryption_configuration] : []

    content {
      key_id = try(encryption_configuration.value.key_id, null)
      type   = encryption_configuration.value.type
    }
  }

  firewall_policy {
    # Stateful
    stateful_default_actions = var.stateful_default_actions

    stateful_engine_options {
      rule_order = var.rule_order
    }

    dynamic "stateful_rule_group_reference" {
      for_each = var.stateful_rule_group_references  # Use var to refer to input variable

      content {
        priority     = stateful_rule_group_reference.value.priority
        resource_arn = stateful_rule_group_reference.value.resource_arn
      }
    }

    # Stateless
    stateless_default_actions          = var.stateless_default_actions
    stateless_fragment_default_actions = var.stateless_fragment_default_actions

    dynamic "stateless_rule_group_reference" {
      for_each = var.stateless_rule_group_reference

      content {
        priority     = stateless_rule_group_reference.value.priority
        resource_arn = stateless_rule_group_reference.value.resource_arn
      }
    }
  }

  name = var.name

  tags = merge(
    var.tags,
    {
      Account         = var.account
      Environment     = var.environment
      CreatedBy       = data.aws_caller_identity.current.user_id
      CreatedByArn    = data.aws_caller_identity.current.arn
      LaunchMonthYear = formatdate("MMM-YYYY", timestamp())
    },
    {
      "Name" = "${var.account}-${var.name}-${var.environment}"
    }
  )

  lifecycle {
    ignore_changes = [
      # Ignore changes to tags
      tags["CreatedBy"], tags["CreatedByArn"], tags["LaunchMonthYear"],
    ]
  }
}

 


################################################################################
# Resource Policy
################################################################################

data "aws_iam_policy_document" "firewall_policy" {
  count = var.create && var.create_resource_policy ? 1 : 0

  statement {
    sid = "NetworkFirewallResourcePolicy"
    actions = distinct(concat(
      var.resource_policy_actions,
      # policy must include the following operations
      [
        "network-firewall:ListFirewallPolicies",
        "network-firewall:CreateFirewall",
        "network-firewall:UpdateFirewall",
        "network-firewall:AssociateFirewallPolicy",
      ]
    ))
    resources = [aws_networkfirewall_firewall_policy.this[0].arn]

    principals {
      type        = "AWS"
      identifiers = var.resource_policy_principals
    }
  }
}

resource "aws_networkfirewall_resource_policy" "this" {
  count = var.create && var.attach_resource_policy ? 1 : 0

  resource_arn = aws_networkfirewall_firewall_policy.this[0].arn
  policy       = var.create_resource_policy ? data.aws_iam_policy_document.firewall_policy[0].json : var.resource_policy
}